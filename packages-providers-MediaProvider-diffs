diff --git a/./packages/providers/MediaProvider/src/com/android/providers/media/MediaScannerService.java b/home/DL/gdallolio/backup/Google-4.1.1/packages/providers/MediaProvider/src/com/android/providers/media/MediaScannerService.java
index 8dac3a1..99bd734 100644
--- a/./packages/providers/MediaProvider/src/com/android/providers/media/MediaScannerService.java
+++ b/home/DL/gdallolio/backup/Google-4.1.1/packages/providers/MediaProvider/src/com/android/providers/media/MediaScannerService.java
@@ -88,57 +88,30 @@ public class MediaScannerService extends Service implements Runnable
         // don't sleep while scanning
         mWakeLock.acquire();
 
-        if ("true".equals(System.getProperty("omap.enhancement"))) {
-            try {
-                ContentValues values = new ContentValues();
-                values.put(MediaStore.MEDIA_SCANNER_VOLUME, volumeName);
-                Uri scanUri = getContentResolver().insert(MediaStore.getMediaScannerUri(), values);
-
-                Uri uri = Uri.parse("file://" + directories[0]);
-                sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_STARTED, uri));
-
-                if (volumeName.equals(MediaProvider.EXTERNAL_VOLUME)) {
-                    openDatabase(volumeName);
-                }
-
-                MediaScanner scanner = createMediaScanner();
-                scanner.scanDirectories(directories, volumeName);
-
-                getContentResolver().delete(scanUri, null, null);
-
-                sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_FINISHED, uri));
-            } catch (Exception e) {
-                Log.e(TAG, "exception in MediaScannerService.scan()", e);
-            } finally {
-                mWakeLock.release();
-            }
-        } else {
-            ContentValues values = new ContentValues();
-            values.put(MediaStore.MEDIA_SCANNER_VOLUME, volumeName);
-            Uri scanUri = getContentResolver().insert(MediaStore.getMediaScannerUri(), values);
-
-            Uri uri = Uri.parse("file://" + directories[0]);
-            sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_STARTED, uri));
+        ContentValues values = new ContentValues();
+        values.put(MediaStore.MEDIA_SCANNER_VOLUME, volumeName);
+        Uri scanUri = getContentResolver().insert(MediaStore.getMediaScannerUri(), values);
 
-            try {
-                if (volumeName.equals(MediaProvider.EXTERNAL_VOLUME)) {
-                    openDatabase(volumeName);
-                }
-
-                MediaScanner scanner = createMediaScanner();
-                scanner.scanDirectories(directories, volumeName);
-            } catch (Exception e) {
-                Log.e(TAG, "exception in MediaScanner.scan()", e);
+        Uri uri = Uri.parse("file://" + directories[0]);
+        sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_STARTED, uri));
+        
+        try {
+            if (volumeName.equals(MediaProvider.EXTERNAL_VOLUME)) {
+                openDatabase(volumeName);
             }
 
-            getContentResolver().delete(scanUri, null, null);
+            MediaScanner scanner = createMediaScanner();
+            scanner.scanDirectories(directories, volumeName);
+        } catch (Exception e) {
+            Log.e(TAG, "exception in MediaScanner.scan()", e);
+        }
 
-            sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_FINISHED, uri));
+        getContentResolver().delete(scanUri, null, null);
 
-            mWakeLock.release();
-        }
+        sendBroadcast(new Intent(Intent.ACTION_MEDIA_SCANNER_FINISHED, uri));
+        mWakeLock.release();
     }
-
+    
     @Override
     public void onCreate()
     {
